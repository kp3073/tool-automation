- name: Add github runner user
  ansible.builtin.user:
    name: github-runner
    home: /github-runner

- name: Download runner software
  ansible.builtin.unarchive:
    src: https://github.com/actions/runner/releases/download/v2.322.0/actions-runner-linux-x64-2.322.0.tar.gz
    dest: /github-runner
    owner: github-runner
    group: github-runner
    remote_src: yes

#- name: Install libicu
#  ansible.builtin.dnf:
#    name: libicu
#    state: installed

- name: Configure runner
  ansible.builtin.shell: ./config.sh --url https://github.com/azawsdevops --token {{ lookup('community.hashi_vault.hashi_vault', 'secret=github-action/data/github-runner:token token={{ vault_token }} url=http://vault-internal.cloudaws.shop:8200')}} --unattended --name github-runner-az --runnergroup Default --labels self-hosted --work _work --replace
  args:
    chdir: /github-runner
  become_user: github-runner
  ignore_errors: yes

#- name: start Service
#  ansible.builtin.shell: ./svc.sh install ; ./svc.sh start
#  args:
#    chdir: /github-runner

- name: Copy Service
  ansible.builtin.template:
    src: github-runner.service
    dest: /etc/systemd/system/github-runner.service

- name: Start Service
  ansible.builtin.systemd_service:
    name: github-runner
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Download Terraform Repo 
  ansible.builtin.get_url:
    url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
    dest: /etc/yum.repos.d/hashicorp.repo
    
- name: Install Terraform
  ansible.builtin.dnf:
      name: terraform
      state: installed
  ignore_errors: yes
      
#- name: Login to azure with SP
#  ansible.builtin.shell: az login --service-principal --username {{ lookup('community.hashi_vault.hashi_vault', 'secret=github-action/data/azure_sp:az_sp_appid token={{ vault_token }} url=http://vault-internal.cloudaws.shop:8200')}}  --password {{ lookup('community.hashi_vault.hashi_vault', 'secret=github-action/data/azure_sp:az_sp_appsecret token={{ vault_token }} url=http://vault-internal.cloudaws.shop:8200')}} --tenant {{ lookup('community.hashi_vault.hashi_vault', 'secret=github-action/data/azure_sp:az_tenant token={{ vault_token }} url=http://vault-internal.cloudaws.shop:8200')}}
#  become_user: github-runner
#- name: Install KubeCtl
#  ansible.builtin.template:
#      src: kube.repo
#      dest: /etc/yum.repos.d/kube.repo
#- name: Install kubectl
#  ansible.builtin.dnf:
#    name: kubectl
#    state: installed  ## Install it manually on Server 

- name: Install ArgoCD cli
  ansible.builtin.shell:
    VERSION=$(curl -L -s https://raw.githubusercontent.com/argoproj/argo-cd/stable/VERSION)
    curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
    sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
    rm argocd-linux-amd64 
  ignore_errors: yes

- name: Disable old version on nodejs 
  ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:20 -y
  ignore_errors: yes
  
- name: Install App dependencies software
  ansible.builtin.dnf:
    name: 
      - nodejs
      - maven
      - python3
      - gcc
      - python-devel
  ignore_errors: yes
    
- name: Download sonar scanner
  ansible.builtin.unarchive:
    src: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
    dest: /opt
    remote_src: yes